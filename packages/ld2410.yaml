# ============================================================
# LD2410 Component with Automatic Calibration
# ============================================================

substitutions:
  tx_pin: TX                  # replace with your TX pin
  rx_pin: RX                  # replace with your RX pin
  collection_seconds: "30"    # how many seconds to collect calibration data
  default_threshold: "1"      # default threshold margin to add on top of maxima

##########################
# Globals to store maxima
##########################
globals:
  # Move energy maxima per gate
  - { id: max_g0_move, type: int, initial_value: '0' }
  - { id: max_g1_move, type: int, initial_value: '0' }
  - { id: max_g2_move, type: int, initial_value: '0' }
  - { id: max_g3_move, type: int, initial_value: '0' }
  - { id: max_g4_move, type: int, initial_value: '0' }
  - { id: max_g5_move, type: int, initial_value: '0' }
  - { id: max_g6_move, type: int, initial_value: '0' }
  - { id: max_g7_move, type: int, initial_value: '0' }
  - { id: max_g8_move, type: int, initial_value: '0' }

  # Still energy maxima per gate
  - { id: max_g0_still, type: int, initial_value: '0' }
  - { id: max_g1_still, type: int, initial_value: '0' }
  - { id: max_g2_still, type: int, initial_value: '0' }
  - { id: max_g3_still, type: int, initial_value: '0' }
  - { id: max_g4_still, type: int, initial_value: '0' }
  - { id: max_g5_still, type: int, initial_value: '0' }
  - { id: max_g6_still, type: int, initial_value: '0' }
  - { id: max_g7_still, type: int, initial_value: '0' }
  - { id: max_g8_still, type: int, initial_value: '0' }

##########################
# UART & LD2410
##########################
uart:
  tx_pin: ${tx_pin}
  rx_pin: ${rx_pin}
  baud_rate: 256000
  parity: none
  stop_bits: 1

ld2410:
  id: ld2410_sensor

##########################
# Switch for engineering mode
##########################
switch:
  - platform: ld2410
    engineering_mode:
      name: Engineering Mode
      id: ld2410_eng_mode

##########################
# Sensors for LD2410 data
##########################
sensor:
  - platform: ld2410
    moving_distance:
      name: Moving Distance
    still_distance:
      name: Still Distance
    moving_energy:
      name: Move Energy
    still_energy:
      name: Still Energy
    detection_distance:
      name: Detection Distance

    # Gate energy sensors
    g0:
      move_energy: { id: g0_move_energy, name: G0 move energy }
      still_energy: { id: g0_still_energy, name: G0 still energy }
    g1:
      move_energy: { id: g1_move_energy, name: G1 move energy }
      still_energy: { id: g1_still_energy, name: G1 still energy }
    g2:
      move_energy: { id: g2_move_energy, name: G2 move energy }
      still_energy: { id: g2_still_energy, name: G2 still energy }
    g3:
      move_energy: { id: g3_move_energy, name: G3 move energy }
      still_energy: { id: g3_still_energy, name: G3 still energy }
    g4:
      move_energy: { id: g4_move_energy, name: G4 move energy }
      still_energy: { id: g4_still_energy, name: G4 still energy }
    g5:
      move_energy: { id: g5_move_energy, name: G5 move energy }
      still_energy: { id: g5_still_energy, name: G5 still energy }
    g6:
      move_energy: { id: g6_move_energy, name: G6 move energy }
      still_energy: { id: g6_still_energy, name: G6 still energy }
    g7:
      move_energy: { id: g7_move_energy, name: G7 move energy }
      still_energy: { id: g7_still_energy, name: G7 still energy }
    g8:
      move_energy: { id: g8_move_energy, name: G8 move energy }
      still_energy: { id: g8_still_energy, name: G8 still energy }

binary_sensor:
  - platform: ld2410
    has_target:
      name: Detection Presence

##########################
# Threshold numbers per gate
##########################
number:
  - platform: ld2410
    timeout: { name: Timeout }
    light_threshold: { name: Light threshold }
    max_move_distance_gate: { name: Max move distance gate }
    max_still_distance_gate: { name: Max still distance gate }

    g0:
      move_threshold: { id: g0_move_threshold, name: G0 move threshold }
      still_threshold: { id: g0_still_threshold, name: G0 still threshold }
    g1:
      move_threshold: { id: g1_move_threshold, name: G1 move threshold }
      still_threshold: { id: g1_still_threshold, name: G1 still threshold }
    g2:
      move_threshold: { id: g2_move_threshold, name: G2 move threshold }
      still_threshold: { id: g2_still_threshold, name: G2 still threshold }
    g3:
      move_threshold: { id: g3_move_threshold, name: G3 move threshold }
      still_threshold: { id: g3_still_threshold, name: G3 still threshold }
    g4:
      move_threshold: { id: g4_move_threshold, name: G4 move threshold }
      still_threshold: { id: g4_still_threshold, name: G4 still threshold }
    g5:
      move_threshold: { id: g5_move_threshold, name: G5 move threshold }
      still_threshold: { id: g5_still_threshold, name: G5 still threshold }
    g6:
      move_threshold: { id: g6_move_threshold, name: G6 move threshold }
      still_threshold: { id: g6_still_threshold, name: G6 still threshold }
    g7:
      move_threshold: { id: g7_move_threshold, name: G7 move threshold }
      still_threshold: { id: g7_still_threshold, name: G7 still threshold }
    g8:
      move_threshold: { id: g8_move_threshold, name: G8 move threshold }
      still_threshold: { id: g8_still_threshold, name: G8 still threshold }

  # User-configurable margin added to maxima
  - platform: template
    name: "Threshold Margin"
    id: ld2410_threshold
    optimistic: true
    initial_value: ${default_threshold}
    min_value: 0
    max_value: 100
    step: 1

##########################
# Report sensor
##########################
text_sensor:
  - platform: template
    name: "LD2410 Calibration Report"
    id: ld2410_max_report
    icon: "mdi:radar"

##########################
# Buttons
##########################
button:
  # Built-in LD2410 controls
  - platform: ld2410
    factory_reset: { name: "Factory Reset" }
    restart: { name: "Restart" }
    query_params: { name: "Query Params" }

  # Start calibration button
  - platform: template
    name: "Start Calibration"
    id: start_collection_button
    on_press:
      then:
        - switch.turn_on: ld2410_eng_mode
        - delay: 500ms
        - lambda: |-
            // Reset all maxima
            id(max_g0_move)=id(max_g1_move)=id(max_g2_move)=id(max_g3_move)=id(max_g4_move)=0;
            id(max_g5_move)=id(max_g6_move)=id(max_g7_move)=id(max_g8_move)=0;
            id(max_g0_still)=id(max_g1_still)=id(max_g2_still)=id(max_g3_still)=id(max_g4_still)=0;
            id(max_g5_still)=id(max_g6_still)=id(max_g7_still)=id(max_g8_still)=0;
        - repeat:
            count: ${collection_seconds}
            then:
              - delay: 1s
              - lambda: |-
                  // Helper lambda to update maxima
                  auto update = [](int &maxv, float current) {
                    int v = (int)round(current);
                    if (v > maxv) maxv = v;
                  };

                  // Update all move gates
                  update(id(max_g0_move), id(g0_move_energy).state);
                  update(id(max_g1_move), id(g1_move_energy).state);
                  update(id(max_g2_move), id(g2_move_energy).state);
                  update(id(max_g3_move), id(g3_move_energy).state);
                  update(id(max_g4_move), id(g4_move_energy).state);
                  update(id(max_g5_move), id(g5_move_energy).state);
                  update(id(max_g6_move), id(g6_move_energy).state);
                  update(id(max_g7_move), id(g7_move_energy).state);
                  update(id(max_g8_move), id(g8_move_energy).state);

                  // Update all still gates
                  update(id(max_g0_still), id(g0_still_energy).state);
                  update(id(max_g1_still), id(g1_still_energy).state);
                  update(id(max_g2_still), id(g2_still_energy).state);
                  update(id(max_g3_still), id(g3_still_energy).state);
                  update(id(max_g4_still), id(g4_still_energy).state);
                  update(id(max_g5_still), id(g5_still_energy).state);
                  update(id(max_g6_still), id(g6_still_energy).state);
                  update(id(max_g7_still), id(g7_still_energy).state);
                  update(id(max_g8_still), id(g8_still_energy).state);

                  // Update text report
                  id(update_report).execute();
        - switch.turn_off: ld2410_eng_mode

  # Apply thresholds button
  - platform: template
    name: "Apply Config"
    on_press:
      then:
        - lambda: |-
            int t = (int)id(ld2410_threshold).state;

            // Arrays for loop-based update
            esphome::number::Number* move_nums[9] = {
              id(g0_move_threshold), id(g1_move_threshold), id(g2_move_threshold),
              id(g3_move_threshold), id(g4_move_threshold), id(g5_move_threshold),
              id(g6_move_threshold), id(g7_move_threshold), id(g8_move_threshold)
            };
            esphome::number::Number* still_nums[9] = {
              id(g0_still_threshold), id(g1_still_threshold), id(g2_still_threshold),
              id(g3_still_threshold), id(g4_still_threshold), id(g5_still_threshold),
              id(g6_still_threshold), id(g7_still_threshold), id(g8_still_threshold)
            };
            int max_move[9] = {
              id(max_g0_move), id(max_g1_move), id(max_g2_move),
              id(max_g3_move), id(max_g4_move), id(max_g5_move),
              id(max_g6_move), id(max_g7_move), id(max_g8_move)
            };
            int max_still[9] = {
              id(max_g0_still), id(max_g1_still), id(max_g2_still),
              id(max_g3_still), id(max_g4_still), id(max_g5_still),
              id(max_g6_still), id(max_g7_still), id(max_g8_still)
            };

            // Apply thresholds for all 9 gates
            for (int i = 0; i < 9; ++i) {
              auto c1 = move_nums[i]->make_call();
              c1.set_value((float)(max_move[i] + t));
              c1.perform();

              auto c2 = still_nums[i]->make_call();
              c2.set_value((float)(max_still[i] + t));
              c2.perform();
            }

            ESP_LOGI("ld2410", "Applied thresholds with +%d margin", t);

##########################
# Scripts
##########################
script:
  # Builds and publishes a text report of maxima
  - id: update_report
    then:
      - lambda: |-
          char buf[512];
          snprintf(buf, sizeof(buf),
            "Move max: %d,%d,%d,%d,%d,%d,%d,%d,%d | Still max: %d,%d,%d,%d,%d,%d,%d,%d,%d",
            id(max_g0_move), id(max_g1_move), id(max_g2_move), id(max_g3_move), id(max_g4_move),
            id(max_g5_move), id(max_g6_move), id(max_g7_move), id(max_g8_move),
            id(max_g0_still), id(max_g1_still), id(max_g2_still), id(max_g3_still), id(max_g4_still),
            id(max_g5_still), id(max_g6_still), id(max_g7_still), id(max_g8_still)
          );
          id(ld2410_max_report).publish_state(std::string(buf));     
          ESP_LOGI("ld2410", "%s", buf);